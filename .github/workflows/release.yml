name: Release

on:
  push:
    tags:
      - v*

jobs:
  publish:
    name: Build and publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        ocaml-version: ['4.09.0']
    steps:
      - uses: avsm/setup-ocaml@master
        with:
          ocaml-version: ${{ matrix.ocaml-version }}

      - uses: actions/checkout@v2

      - name: Pin package
        run: opam pin add inquire.dev -n .

      - name: Query and install external dependencies
        run: opam depext -yt inquire

      - name: Install dependencies
        run: opam install -t . --deps-only

      - name: Install additional Opam dependencies
        run: opam install -y odoc dune-release

      - name: Build
        run: opam exec -- make

      - name: Build documentation
        run: opam exec -- make doc

      - name: Setup Opam repository
        run: |
          mkdir -p "$HOME/.config/dune/"
          echo "${{ secrets.GITHUB_TOKEN }}" > "$HOME/.config/dune/github.token"
          git clone https://github.com/tmattio/opam-repository.git $HOME/git/opam-repository

      - name: Create a package distribution archive
        run: opam exec -- dune-release distrib --verbosity=debug

      - name: Setup Git remote
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "Github Actions"

      - name: Publish release archive
        run: opam exec -- dune-release publish distrib -y --verbosity=debug

      - name: Create an Opam package
        run: opam exec -- dune-release opam pkg --verbosity=debug

      - name: Release on Opam
        run: opam exec -- dune-release opam submit --no-auto-open -y --verbosity=debug

      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: _build/default/_doc/_html/
